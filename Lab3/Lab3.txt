//Sample using LiquidCrystal library
#include <LiquidCrystal.h>
#include<string>
#define BUTTON1 BT1
#define BUTTON2 BT2
#define BUTTON4 BT4
/*******************************************************

This program will test the LCD panel and the buttons
Mark Bramwell, July 2010

********************************************************/
String first = "ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMN";
String second = "abcdefghijklmnopqrstuvwxyzabcdefghijklmn";

// select the pins used on the LCD panel
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);
char KeyValue[]={'1','2','3','A','4','5','6','B','7','8','9','C','*','0','#','D'};
byte Row=0, Col=0;

int cursor_on = 0;  // 追蹤游標狀態

void setup() {
  // put your setup code here, to run once:
 
  pinMode(10, INPUT); //R1: S1,S2,S3,S4 (1,2,3,A)                                   
  pinMode(11, INPUT_PULLUP); //R2: S5,S6,S7,S8 (4,5,6,B)
  pinMode(12, INPUT_PULLUP); //R3: S9, S10, S11,S12 (7,8,9,C)
  pinMode(13, INPUT_PULLUP); //R4: (*,0,#,D)
  pinMode(A0, OUTPUT); //A1, C1: S1,S5,S9 (1,4,7,*)
  pinMode(A1, OUTPUT); //A2, C2: S2,S6,S10 (2,5,8,0)
  pinMode(A2, OUTPUT); //A3, C3: S3,S7,S11 (3,6,9,#)
  pinMode(A3, OUTPUT); //A4, C4, S4,S8,S12 (*,0, #,D)
  //Pin left to right :R1 R2 R3 R4 C1 C2 C3 C4

  digitalWrite(A0,HIGH);
  digitalWrite(A1,HIGH);
  digitalWrite(A2,HIGH);
  digitalWrite(A3,HIGH);

  // start the library
  lcd.begin(16, 2); 
  delay(100);
  lcd.clear();      
  lcd.home();       
  lcd.setCursor(0,0);   //顯示cursor在左上角
  lcd.cursor();
  cursor_on = 1;
  
} 
void botton1() //控制第一組文字顯示在第一列,文字長度40。
{
//  lcd.home();
//  lcd.setCursor(0,0);
//  lcd.print("                ");
//  lcd.setCursor(0,0);
//  lcd.print(first);
  for(int i = 0; i < 40; i++){
    lcd.setCursor(i, 0);
    lcd.print(" ");
  }
  
  // 將字串寫入第一行的完整記憶體 (最多40個字元)
  for(int i = 0; i < 40 && i < first.length(); i++){
    lcd.setCursor(i, 0);
    lcd.print(first[i]);
  }
  lcd.noCursor();
  cursor_on = 0;
}
void bottonA()    //控制第二組文字顯示在第二列,文字長度40。
{
//  lcd.setCursor(0,1);
//  lcd.print("                ");
//  lcd.setCursor(0,1);
//  lcd.print(second);
  for(int i = 0; i < 40; i++){
    lcd.setCursor(i, 1);
    lcd.print(" ");
  }
  
  // 將字串寫入第二行的完整記憶體 (最多40個字元)
  for(int i = 0; i < 40 && i < second.length(); i++){
    lcd.setCursor(i, 1);
    lcd.print(second[i]);
  }
  lcd.noCursor();
  cursor_on = 0;
}
void botton4()  //控制文字左移
{
  for(int i = 0; i < 40; i++){
    lcd.scrollDisplayLeft();
    delay(300);
  }
}
void bottonD()  //控制文字右移
{
  for(int i = 0; i < 40; i++){
    lcd.scrollDisplayRight();
    delay(300);
  }
}
void bottonBNT1() //控制Clear Display
{
  lcd.clear();
  lcd.home();
  lcd.noCursor();
  cursor_on = 0;
  delay(300);
  while(!digitalRead(BUTTON1));
}
void bottonBNT2() //控制Return Home
{
  lcd.home();
  delay(300);
  while(!digitalRead(BUTTON2));
}
void bottonBNT4() //控制Cursor on/off。
{
  delay(50);
  
  if(cursor_on==1){
    lcd.noCursor();
    cursor_on = 0;
  }else{
    lcd.cursor();
    cursor_on = 1;
  }
  while(!digitalRead(BT4));
  delay(50);
  
}
void loop() 
{
  static int keypressedcount=0;
  byte keyindex=0;
  
  if(keyscan()==true) 
  {
    keyindex=(Row-1)*4+Col;
    delay(5);
    if ((keyscan()==true) && (keyindex=(Row-1)*4+Col))
    {
        char pressKey = KeyValue[keyindex - 1];
        digitalWrite(A0,LOW);
        digitalWrite(A1,LOW);
        digitalWrite(A2,LOW);
        digitalWrite(A3,LOW);
        delayMicroseconds(100);
        while( (digitalRead(10)==LOW) || (digitalRead(11)==LOW) || 
               (digitalRead(12)==LOW) || (digitalRead(13)==LOW))
          ;  
        
        if(pressKey == '1')
        {
            botton1();
        }
        if(pressKey == 'A')
        {
            bottonA();
        }
        if(pressKey == '4')
        {
            botton4();
        }
        if(pressKey == 'D')
        {
          bottonD();
        }
      }
    } 
  if(!digitalRead(BT1)){
    bottonBNT1();
  }
  if(!digitalRead(BT2)){
    bottonBNT2();
  }
  if(!digitalRead(BT4))
  {
    delay(50);
    if(!digitalRead(BT4))
    {
      bottonBNT4();
    } 
  }
}

bool keyscan( )
{
  Row=0;Col=0;
  bool keypressed = false;
  //scan col1
  digitalWrite(A0, LOW);
  digitalWrite(A1, HIGH);
  digitalWrite(A2, HIGH);
  digitalWrite(A3, HIGH);
  delayMicroseconds(100);
  //Read keys in row.1
  if(digitalRead(10)==LOW)
  {
      digitalWrite(A0, HIGH);
      Col=1;Row=1;
      keypressed = true;
      return(keypressed);
  }
  //Read keys in row.2
  if(digitalRead(11)==LOW)
  {
      digitalWrite(A0, HIGH);
      Col=1;Row=2;
      keypressed = true;
      return(keypressed);
  }
  //Read keys in row.3
  if(digitalRead(12)==LOW)
  {
      digitalWrite(A0, HIGH);
      Col=1;Row=3;
      keypressed = true;
      return(keypressed);
  }
  //Read keys in row.4
  if(digitalRead(13)==LOW)
  {
       digitalWrite(A0, HIGH);
      Col=1;Row=4;
      keypressed = true;
      return(keypressed);
  }
  //scan col 2  
  digitalWrite(A0, HIGH);
  digitalWrite(A1, LOW);
  digitalWrite(A2, HIGH);
  digitalWrite(A3, HIGH);
  delayMicroseconds(100);
  //Read keys in row.1
  if(digitalRead(10)==LOW)
  {
      digitalWrite(A1, HIGH);
      Col=2;Row=1;
      keypressed = true;
      return(keypressed);
  }
    //Read keys in row.2
  if(digitalRead(11)==LOW)
  {
      digitalWrite(A1, HIGH);
      Col=2;Row=2;
      keypressed = true;
      return(keypressed);
  }
  //Read keys in row.3
  if(digitalRead(12)==LOW)
  {
      digitalWrite(A1, HIGH);
      Col=2;Row=3;
      keypressed = true;
      return(keypressed);
  }
  //Read keys in row.4
  if(digitalRead(13)==LOW)
  {
      digitalWrite(A1, HIGH);
      Col=2;Row=4;
      keypressed = true;
      return(keypressed);
  }

  //scan col 3  
  digitalWrite(A0, HIGH);
  digitalWrite(A1, HIGH);
  digitalWrite(A2, LOW);
  digitalWrite(A3, HIGH);
  delayMicroseconds(100);
  //Read keys in row.1
  if(digitalRead(10)==LOW)
  {
      digitalWrite(A2, HIGH);
      Col=3;Row=1;
      keypressed = true;
      return(keypressed);
  }
  //Read keys in row.2
  if(digitalRead(11)==LOW)
  {
      digitalWrite(A2, HIGH);
      Col=3;Row=2;
      keypressed = true;
      return(keypressed);
  }  
  //Read keys in row.3
  if(digitalRead(12)==LOW)
  {
      digitalWrite(A2, HIGH);
      Col=3;Row=3;
      keypressed = true;
      return(keypressed);
  }
  //Read keys in row.4
  if(digitalRead(13)==LOW)
  {
      digitalWrite(A2, HIGH);
      Col=3;Row=4;
      keypressed = true;
      return(keypressed);
  }
  
  //scan col 4  
  digitalWrite(A0, HIGH);
  digitalWrite(A1, HIGH);
  digitalWrite(A2, HIGH);
  digitalWrite(A3, LOW);
  delayMicroseconds(100);
  //Read keys in row.1
  if(digitalRead(10)==LOW)
  {
      digitalWrite(A3, HIGH);
      Col=4;Row=1;
      keypressed = true;
      return(keypressed);
  }
    //Read keys in row.2
  if(digitalRead(11)==LOW)
  {
      digitalWrite(A3, HIGH);
      Col=4;Row=2;
      keypressed = true;
      return(keypressed);
  }
  //Read keys in row.3
  if(digitalRead(12)==LOW)
  {
      digitalWrite(A3, HIGH);
      Col=4;Row=3;
      keypressed = true;
      return(keypressed);
  }
  //Read keys in row.4
  if(digitalRead(13)==LOW)
  {
      digitalWrite(A3, HIGH);
      Col=4;Row=4;
      keypressed = true;
      return(keypressed);
  }
  return(false);
}


