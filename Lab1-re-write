#define NUM 16 // 首先定義LED的數目
int leds[NUM] = {
D0, D1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, D14, D15};
// 將每個腳位模式設為OUTPUT
void setup() {
  for(int i = 0; i < NUM; i++){
    pinMode(leds[i], OUTPUT);
  }
}
void LedsDisplay(unsigned value, unsigned dur)
{
    unsigned tmp = (value & 0xFFFF);
    for(int i = 0; i < NUM; i++){
        if(tmp & 0x1) digitalWrite(leds[i], LOW);
        else          digitalWrite(leds[i], HIGH);
        tmp >>= 1;
    }
    delay(dur);
    return;
}
//傳統跑馬燈：像是一顆燈從右邊跑到左邊，再往回跑，一次只會亮一顆燈。
void one(unsigned times) 
{
    for(int j = 0; j < times; j++){
        unsigned value = 0x0001;

        for(int i = 0; i < NUM; i++){
            LedsDisplay(value, 150);
            value <<= 1;
            value |= 0x01;
        }
    }
}

//舞台對稱感：兩端同時亮，一圈一圈向中心靠近，最後中間燈全亮，接著再從中間往外熄滅，直到兩端都熄滅。
void two(unsigned times)
{
    for(int j = 0; j < times; j++){
        unsigned mask = 0x0000;

        for(int i = 0; i < NUM/2; i++){
            mask |= (0x1 << i);
            mask |= (0x1 <<(NUM - 1 - i));
            LedsDisplay(mask, 150);
        }

        for(int i = NUM/2-1; i >=0 ; i--){
            mask &= ~(0x1 << i);
            mask &= ~(0x1 <<(NUM - 1 - i));
            LedsDisplay(mask, 150);
        }
    }
}

//波浪推進：由右向左逐顆亮起，抵達最左邊後，反向逐顆熄滅。
void three(unsigned times) {
  for (unsigned t = 0; t < times; t++) {
    unsigned mask = 0;

    // 由右往左逐顆亮
    for (int i = 0; i < NUM; i++) {
      mask |= (1u << i);
      LedsDisplay(mask, 150);
    }

    // 由左往右逐顆熄
    for (int i = NUM - 1; i >= 0; i--) {
      mask &= ~(1u << i);
      LedsDisplay(mask, 150);
    }
  }
}

//三顆燈由右往左前進
void four(unsigned times) {
  for (unsigned t = 0; t < times; t++) {
    unsigned mask = 0;

    // 三顆燈從右往左移動 (i=2 ~ 14)
    for (int i = 2; i <= 14; i++) {
      mask = (1u << i) | (1u << (i - 1)) | (1u << (i - 2));
      LedsDisplay(mask, 150);
    }

    // 移動結束後，全部熄滅
    LedsDisplay(0x0000, 0);
  }
}


//雙點對稱跑馬燈：一開始左右兩端的兩顆燈亮起，以對稱的方式向中間移動，每次移動都保持兩顆燈的狀態，
//當抵達中間時（或兩顆燈相鄰）再往返循環。
void five(unsigned times) {
  for (int j = 0; j < times; j++) {
    unsigned mask = 0;

    for (int i = 1; i <= 7; i++) {
      // 左邊一對
      mask |= (1u << i);
      mask |= (1u << (i - 1));

      // 右邊一對（對稱）
      if (i != 7) {
        mask |= (1u << (15 - i - 1));
        mask |= (1u << (15 - i));
      }

      LedsDisplay(mask, 600);

      // 清掉這次加的燈，準備下一步
      mask &= ~((1u << i) | (1u << (i - 1)));
      if (i != 7) {
        mask &= ~((1u << (15 - i - 1)) | (1u << (15 - i)));
      }
    }
  }
}


//一開始全部熄滅
void begin()
{
  for(int i = 0; i < NUM; i++){
    LedsDisplay(0x0000, 0);
  }
}

void loop()
{
  begin();
  one(3);
  two(3);
  three(3);
  four(3);
  five(3);
}
